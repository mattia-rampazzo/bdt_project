services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper    
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
        test: ['CMD', 'bash', '-c', "echo 'ruok' | nc localhost 2181"]
        interval: 10s
        timeout: 5s
        retries: 5
    networks:
      - bigdata

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kafka
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    ports:
      - "9092:9092"
    networks:
      - bigdata
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  spark-master:
    image: bitnami/spark:3.4
    hostname: spark-master
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./spark-data:/bitnami
    networks:
      - bigdata

  spark-worker:
    image: bitnami/spark:3.4
    hostname: spark-worker
    container_name: spark-worker
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=8G
      - SPARK_WORKER_CORES=8
    volumes:
      - ./spark-data:/bitnami
    networks:
      - bigdata

  cassandra:
    image: cassandra:4.0
    hostname: cassandra
    container_name: cassandra
    ports:
      - "9042:9042"
    volumes:
      - cassandra-data:/var/lib/cassandra
    networks:
      - bigdata

  redis:
    image: redis:7.4-alpine
    hostname: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - bigdata

  setup:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: setup
    working_dir: /bdt
    entrypoint: ["python3", "setup.py"]
        
    volumes:
      - ./:/bdt/  # Mount the code directory
    depends_on:
      kafka:
        condition: service_healthy

    networks:
      - bigdata

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dashboard
    working_dir: /bdt/dashboard
    entrypoint: ["python3", "app.py"]    
    volumes:
      - ./dashboard:/bdt/dashboard  # Mount the code directory
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      setup:
          condition: service_completed_successfully
    networks:
      - bigdata

  spark-streaming:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spark-streaming
    working_dir: /bdt/spark_streaming
    entrypoint: ["python3", "app.py"]
    volumes:
      - ./spark_streaming:/bdt/spark_streaming  # Mount the code directory
    restart: always
    depends_on:
      setup:
        condition: service_completed_successfully
    networks:
      - bigdata

  data-fetch:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: data-fetch
    working_dir: /bdt/data_fetch
    entrypoint: ["python3", "fetch_air_quality_data.py"]
    volumes:
      - ./data_fetch:/bdt/data_fetch  # Mount the code directory
    restart: always
    depends_on:
      setup:
          condition: service_completed_successfully
    networks:
      - bigdata

volumes:
  spark-data:
  redis-data:
  cassandra-data:

networks:
  bigdata:
    driver: bridge